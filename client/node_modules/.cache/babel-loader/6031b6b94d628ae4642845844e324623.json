{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/robertoconnor/Desktop/hbeds/client/src/components/loginForm.js\";\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { login } from '../actions/sessionActions';\n\nclass LoginForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: '',\n      password: '',\n      loggedIn: false\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  componentDidMount() {\n    const loggedInUser = localStorage.getItem('user');\n\n    if (loggedInUser) {\n      this.setState({\n        loggedIn: true\n      });\n    }\n  }\n\n  handleInputChange(e) {\n    e.preventDefault();\n    const field = e.target.getAttribute('id');\n\n    if (field === 'login-email') {\n      this.setState({\n        'email': e.target.value\n      });\n    } else {\n      this.setState({\n        'password': e.target.value\n      });\n    }\n  }\n\n  async processForgotPassword() {\n    console.log(this.state.email);\n\n    try {\n      const body = {\n        email: this.state.email\n      };\n      const forgotPasswordResponse = await fetch('http://localhost:7001/v1/forgotPassword', {\n        method: 'POST',\n        body: JSON.stringify(body),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log(await forgotPasswordResponse.json());\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  render() {\n    const {\n      loggedIn,\n      email,\n      password\n    } = this.state;\n    if (loggedIn) return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/mainpage\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 27\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"login-email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"login-email\",\n          value: email,\n          placeholder: \"Email\",\n          onChange: this.handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"login-password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"login-password\",\n          value: password,\n          placeholder: \"Password\",\n          onChange: this.handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.props.login({\n            email,\n            password\n          }),\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.processForgotPassword(),\n        children: \"Forgot Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    loggedIn: Boolean(state.session.currentUser)\n  };\n};\n\nconst mapDispatchToProps = (dispatch, {\n  location\n}) => {\n  return {\n    login: user => dispatch(login(user))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);","map":{"version":3,"sources":["/Users/robertoconnor/Desktop/hbeds/client/src/components/loginForm.js"],"names":["React","Component","Redirect","connect","login","LoginForm","constructor","state","email","password","loggedIn","handleInputChange","bind","componentDidMount","loggedInUser","localStorage","getItem","setState","e","preventDefault","field","target","getAttribute","value","processForgotPassword","console","log","body","forgotPasswordResponse","fetch","method","JSON","stringify","headers","json","err","render","props","mapStateToProps","Boolean","session","currentUser","mapDispatchToProps","dispatch","location","user"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport { login } from '../actions/sessionActions'\n\nclass LoginForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: '',\n      password: '',\n      loggedIn: false\n    }\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  componentDidMount() {\n    const loggedInUser = localStorage.getItem('user')\n    if (loggedInUser) {\n      this.setState({ loggedIn: true })\n    }\n  }\n\n  handleInputChange(e) {\n    e.preventDefault();\n    const field = e.target.getAttribute('id');\n    if (field === 'login-email') {\n      this.setState({ 'email': e.target.value });\n    } else {\n      this.setState({ 'password': e.target.value });\n    }\n  }\n\n  async processForgotPassword() {\n    console.log(this.state.email);\n    try {\n      const body = { email: this.state.email };\n      const forgotPasswordResponse = await fetch('http://localhost:7001/v1/forgotPassword', {\n        method: 'POST',\n        body: JSON.stringify(body),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log(await forgotPasswordResponse.json());\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  render() {\n    const { loggedIn, email, password } = this.state\n    if (loggedIn) return (<Redirect to='/mainpage' />);\n\n    return (\n      <div className=\"login-form-container\">\n        <form>\n          <label htmlFor=\"login-email\">Email</label>\n          <input\n            id=\"login-email\"\n            value={email}\n            placeholder=\"Email\"\n            onChange={this.handleInputChange}\n          /><br></br>\n          <label htmlFor=\"login-password\">Password</label>\n          <input\n            id=\"login-password\"\n            value={password}\n            placeholder=\"Password\"\n            onChange={this.handleInputChange}\n          /><br></br>\n        <button onClick={() => this.props.login({ email, password })}>Login</button>\n        </form>\n        <button onClick={() => this.processForgotPassword()}>Forgot Password</button>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    loggedIn: Boolean(state.session.currentUser)\n  };\n};\n\nconst mapDispatchToProps = (dispatch, { location }) => {\n  return {\n    login: user => dispatch(login(user))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);\n"]},"metadata":{},"sourceType":"module"}